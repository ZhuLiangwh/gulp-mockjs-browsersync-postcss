{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/flexible.js","bundle.js","src/js/index.js","src/js/zepto.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = function(){\n    ;(function(win, lib) {\n        var doc = win.document;\n        var docEl = doc.documentElement;\n        var metaEl = doc.querySelector('meta[name=\"viewport\"]');\n        var flexibleEl = doc.querySelector('meta[name=\"flexible\"]');\n        var dpr = 0;\n        var scale = 0;\n        var tid;\n        var flexible = lib.flexible || (lib.flexible = {});\n        \n        if (metaEl) {\n            console.warn('将根据已有的meta标签来设置缩放比例');\n            var match = metaEl.getAttribute('content').match(/initial\\-scale=([\\d\\.]+)/);\n            if (match) {\n                scale = parseFloat(match[1]);\n                dpr = parseInt(1 / scale);\n            }\n        } else if (flexibleEl) {\n            var content = flexibleEl.getAttribute('content');\n            if (content) {\n                var initialDpr = content.match(/initial\\-dpr=([\\d\\.]+)/);\n                var maximumDpr = content.match(/maximum\\-dpr=([\\d\\.]+)/);\n                if (initialDpr) {\n                    dpr = parseFloat(initialDpr[1]);\n                    scale = parseFloat((1 / dpr).toFixed(2));    \n                }\n                if (maximumDpr) {\n                    dpr = parseFloat(maximumDpr[1]);\n                    scale = parseFloat((1 / dpr).toFixed(2));    \n                }\n            }\n        }\n\n        if (!dpr && !scale) {\n            var isAndroid = win.navigator.appVersion.match(/android/gi);\n            var isIPhone = win.navigator.appVersion.match(/iphone/gi);\n            var devicePixelRatio = win.devicePixelRatio;\n            if (isIPhone) {\n                // iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案\n                if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {                \n                    dpr = 3;\n                } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){\n                    dpr = 2;\n                } else {\n                    dpr = 1;\n                }\n            } else {\n                // 其他设备下，仍旧使用1倍的方案\n                dpr = 1;\n            }\n            scale = 1 / dpr;\n        }\n\n        docEl.setAttribute('data-dpr', dpr);\n        if (!metaEl) {\n            metaEl = doc.createElement('meta');\n            metaEl.setAttribute('name', 'viewport');\n            metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n            if (docEl.firstElementChild) {\n                docEl.firstElementChild.appendChild(metaEl);\n            } else {\n                var wrap = doc.createElement('div');\n                wrap.appendChild(metaEl);\n                doc.write(wrap.innerHTML);\n            }\n        }\n\n        function refreshRem(){\n            var width = docEl.getBoundingClientRect().width;\n            if (width / dpr > 540) {\n                width = 540 * dpr;\n            }\n            var rem = width / 10;\n            docEl.style.fontSize = rem + 'px';\n            flexible.rem = win.rem = rem;\n        }\n\n        win.addEventListener('resize', function() {\n            clearTimeout(tid);\n            tid = setTimeout(refreshRem, 300);\n        }, false);\n        win.addEventListener('pageshow', function(e) {\n            if (e.persisted) {\n                clearTimeout(tid);\n                tid = setTimeout(refreshRem, 300);\n            }\n        }, false);\n\n        if (doc.readyState === 'complete') {\n            doc.body.style.fontSize = 12 * dpr + 'px';\n        } else {\n            doc.addEventListener('DOMContentLoaded', function(e) {\n                doc.body.style.fontSize = 12 * dpr + 'px';\n            }, false);\n        }\n        \n\n        refreshRem();\n\n        flexible.dpr = win.dpr = dpr;\n        flexible.refreshRem = refreshRem;\n        flexible.rem2px = function(d) {\n            var val = parseFloat(d) * this.rem;\n            if (typeof d === 'string' && d.match(/rem$/)) {\n                val += 'px';\n            }\n            return val;\n        }\n        flexible.px2rem = function(d) {\n            var val = parseFloat(d) / this.rem;\n            if (typeof d === 'string' && d.match(/px$/)) {\n                val += 'rem';\n            }\n            return val;\n        }\n    })(window, window['lib'] || (window['lib'] = {}));\n}","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = function(){\n    ;(function(win, lib) {\n        var doc = win.document;\n        var docEl = doc.documentElement;\n        var metaEl = doc.querySelector('meta[name=\"viewport\"]');\n        var flexibleEl = doc.querySelector('meta[name=\"flexible\"]');\n        var dpr = 0;\n        var scale = 0;\n        var tid;\n        var flexible = lib.flexible || (lib.flexible = {});\n        \n        if (metaEl) {\n            console.warn('将根据已有的meta标签来设置缩放比例');\n            var match = metaEl.getAttribute('content').match(/initial\\-scale=([\\d\\.]+)/);\n            if (match) {\n                scale = parseFloat(match[1]);\n                dpr = parseInt(1 / scale);\n            }\n        } else if (flexibleEl) {\n            var content = flexibleEl.getAttribute('content');\n            if (content) {\n                var initialDpr = content.match(/initial\\-dpr=([\\d\\.]+)/);\n                var maximumDpr = content.match(/maximum\\-dpr=([\\d\\.]+)/);\n                if (initialDpr) {\n                    dpr = parseFloat(initialDpr[1]);\n                    scale = parseFloat((1 / dpr).toFixed(2));    \n                }\n                if (maximumDpr) {\n                    dpr = parseFloat(maximumDpr[1]);\n                    scale = parseFloat((1 / dpr).toFixed(2));    \n                }\n            }\n        }\n\n        if (!dpr && !scale) {\n            var isAndroid = win.navigator.appVersion.match(/android/gi);\n            var isIPhone = win.navigator.appVersion.match(/iphone/gi);\n            var devicePixelRatio = win.devicePixelRatio;\n            if (isIPhone) {\n                // iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案\n                if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {                \n                    dpr = 3;\n                } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){\n                    dpr = 2;\n                } else {\n                    dpr = 1;\n                }\n            } else {\n                // 其他设备下，仍旧使用1倍的方案\n                dpr = 1;\n            }\n            scale = 1 / dpr;\n        }\n\n        docEl.setAttribute('data-dpr', dpr);\n        if (!metaEl) {\n            metaEl = doc.createElement('meta');\n            metaEl.setAttribute('name', 'viewport');\n            metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n            if (docEl.firstElementChild) {\n                docEl.firstElementChild.appendChild(metaEl);\n            } else {\n                var wrap = doc.createElement('div');\n                wrap.appendChild(metaEl);\n                doc.write(wrap.innerHTML);\n            }\n        }\n\n        function refreshRem(){\n            var width = docEl.getBoundingClientRect().width;\n            if (width / dpr > 540) {\n                width = 540 * dpr;\n            }\n            var rem = width / 10;\n            docEl.style.fontSize = rem + 'px';\n            flexible.rem = win.rem = rem;\n        }\n\n        win.addEventListener('resize', function() {\n            clearTimeout(tid);\n            tid = setTimeout(refreshRem, 300);\n        }, false);\n        win.addEventListener('pageshow', function(e) {\n            if (e.persisted) {\n                clearTimeout(tid);\n                tid = setTimeout(refreshRem, 300);\n            }\n        }, false);\n\n        if (doc.readyState === 'complete') {\n            doc.body.style.fontSize = 12 * dpr + 'px';\n        } else {\n            doc.addEventListener('DOMContentLoaded', function(e) {\n                doc.body.style.fontSize = 12 * dpr + 'px';\n            }, false);\n        }\n        \n\n        refreshRem();\n\n        flexible.dpr = win.dpr = dpr;\n        flexible.refreshRem = refreshRem;\n        flexible.rem2px = function(d) {\n            var val = parseFloat(d) * this.rem;\n            if (typeof d === 'string' && d.match(/rem$/)) {\n                val += 'px';\n            }\n            return val;\n        }\n        flexible.px2rem = function(d) {\n            var val = parseFloat(d) / this.rem;\n            if (typeof d === 'string' && d.match(/px$/)) {\n                val += 'rem';\n            }\n            return val;\n        }\n    })(window, window['lib'] || (window['lib'] = {}));\n}\n},{}],2:[function(require,module,exports){\n    require('./zepto')();\n    require('./flexible.js')();\n\n    var cache = {};\n\n    this.tmpl = function tmpl(str, data) {\n        // Figure out if we're getting a template, or if we need to\n        // load the template - and be sure to cache the result.\n        var fn = !/\\W/.test(str) ?\n            cache[str] = cache[str] ||\n                tmpl(document.getElementById(str).innerHTML) :\n\n            // Generate a reusable function that will serve as a template\n            // generator (and which will be cached).\n            new Function(\"obj\",\n                \"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n                    // Introduce the data as local variables using with(){}\n                \"with(obj){p.push('\" +\n\n                    // Convert the template into pure JavaScript\n                str\n                    .replace(/[\\r\\t\\n]/g, \" \")\n                    .split(\"<%\").join(\"\\t\")\n                    .replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n                    .replace(/\\t=(.*?)%>/g, \"',$1,'\")\n                    .split(\"\\t\").join(\"');\")\n                    .split(\"%>\").join(\"p.push('\")\n                    .split(\"\\r\").join(\"\\\\'\")\n                + \"');}return p.join('');\");\n        // Provide some basic currying to the user\n        return data ? fn(data) : fn;\n    };\n\n\n    $.ajax({\n        type: 'GET',\n        url: 'hello.json',\n        dataType: 'json',\n        success: function(data) {\n            var data = data.data;\n            $('<pre>').text(JSON.stringify(data, null, 4)).appendTo('body');\n        }\n\n    });\n\n\n\n\n\n\n},{\"./flexible.js\":1,\"./zepto\":3}],3:[function(require,module,exports){\nmodule.exports= function(){\n\n/* Zepto v1.1.6 - zepto event ajax form ie - zeptojs.com/license */\n\nvar Zepto = (function() {\n  var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,\n    document = window.document,\n    elementDisplay = {}, classCache = {},\n    cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\n    fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n    singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n    tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n    rootNodeRE = /^(?:body|html)$/i,\n    capitalRE = /([A-Z])/g,\n\n    // special attributes that should be get/set via method calls\n    methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\n    adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\n    table = document.createElement('table'),\n    tableRow = document.createElement('tr'),\n    containers = {\n      'tr': document.createElement('tbody'),\n      'tbody': table, 'thead': table, 'tfoot': table,\n      'td': tableRow, 'th': tableRow,\n      '*': document.createElement('div')\n    },\n    readyRE = /complete|loaded|interactive/,\n    simpleSelectorRE = /^[\\w-]*$/,\n    class2type = {},\n    toString = class2type.toString,\n    zepto = {},\n    camelize, uniq,\n    tempParent = document.createElement('div'),\n    propMap = {\n      'tabindex': 'tabIndex',\n      'readonly': 'readOnly',\n      'for': 'htmlFor',\n      'class': 'className',\n      'maxlength': 'maxLength',\n      'cellspacing': 'cellSpacing',\n      'cellpadding': 'cellPadding',\n      'rowspan': 'rowSpan',\n      'colspan': 'colSpan',\n      'usemap': 'useMap',\n      'frameborder': 'frameBorder',\n      'contenteditable': 'contentEditable'\n    },\n    isArray = Array.isArray ||\n      function(object){ return object instanceof Array }\n\n  zepto.matches = function(element, selector) {\n    if (!selector || !element || element.nodeType !== 1) return false\n    var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||\n                          element.oMatchesSelector || element.matchesSelector\n    if (matchesSelector) return matchesSelector.call(element, selector)\n    // fall back to performing a selector:\n    var match, parent = element.parentNode, temp = !parent\n    if (temp) (parent = tempParent).appendChild(element)\n    match = ~zepto.qsa(parent, selector).indexOf(element)\n    temp && tempParent.removeChild(element)\n    return match\n  }\n\n  function type(obj) {\n    return obj == null ? String(obj) :\n      class2type[toString.call(obj)] || \"object\"\n  }\n\n  function isFunction(value) { return type(value) == \"function\" }\n  function isWindow(obj)     { return obj != null && obj == obj.window }\n  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\n  function isObject(obj)     { return type(obj) == \"object\" }\n  function isPlainObject(obj) {\n    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype\n  }\n  function likeArray(obj) { return typeof obj.length == 'number' }\n\n  function compact(array) { return filter.call(array, function(item){ return item != null }) }\n  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\n  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\n  function dasherize(str) {\n    return str.replace(/::/g, '/')\n           .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n           .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n           .replace(/_/g, '-')\n           .toLowerCase()\n  }\n  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\n\n  function classRE(name) {\n    return name in classCache ?\n      classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\n  }\n\n  function maybeAddPx(name, value) {\n    return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n  }\n\n  function defaultDisplay(nodeName) {\n    var element, display\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName)\n      document.body.appendChild(element)\n      display = getComputedStyle(element, '').getPropertyValue(\"display\")\n      element.parentNode.removeChild(element)\n      display == \"none\" && (display = \"block\")\n      elementDisplay[nodeName] = display\n    }\n    return elementDisplay[nodeName]\n  }\n\n  function children(element) {\n    return 'children' in element ?\n      slice.call(element.children) :\n      $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\n  }\n\n  // `$.zepto.fragment` takes a html string and an optional tag name\n  // to generate DOM nodes nodes from the given html string.\n  // The generated DOM nodes are returned as an array.\n  // This function can be overriden in plugins for example to make\n  // it compatible with browsers that don't support the DOM fully.\n  zepto.fragment = function(html, name, properties) {\n    var dom, nodes, container\n\n    // A special case optimization for a single tag\n    if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))\n\n    if (!dom) {\n      if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\n      if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\n      if (!(name in containers)) name = '*'\n\n      container = containers[name]\n      container.innerHTML = '' + html\n      dom = $.each(slice.call(container.childNodes), function(){\n        container.removeChild(this)\n      })\n    }\n\n    if (isPlainObject(properties)) {\n      nodes = $(dom)\n      $.each(properties, function(key, value) {\n        if (methodAttributes.indexOf(key) > -1) nodes[key](value)\n        else nodes.attr(key, value)\n      })\n    }\n\n    return dom\n  }\n\n  // `$.zepto.Z` swaps out the prototype of the given `dom` array\n  // of nodes with `$.fn` and thus supplying all the Zepto functions\n  // to the array. Note that `__proto__` is not supported on Internet\n  // Explorer. This method can be overriden in plugins.\n  zepto.Z = function(dom, selector) {\n    dom = dom || []\n    dom.__proto__ = $.fn\n    dom.selector = selector || ''\n    return dom\n  }\n\n  // `$.zepto.isZ` should return `true` if the given object is a Zepto\n  // collection. This method can be overriden in plugins.\n  zepto.isZ = function(object) {\n    return object instanceof zepto.Z\n  }\n\n  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\n  // takes a CSS selector and an optional context (and handles various\n  // special cases).\n  // This method can be overriden in plugins.\n  zepto.init = function(selector, context) {\n    var dom\n    // If nothing given, return an empty Zepto collection\n    if (!selector) return zepto.Z()\n    // Optimize for string selectors\n    else if (typeof selector == 'string') {\n      selector = selector.trim()\n      // If it's a html fragment, create nodes from it\n      // Note: In both Chrome 21 and Firefox 15, DOM error 12\n      // is thrown if the fragment doesn't begin with <\n      if (selector[0] == '<' && fragmentRE.test(selector))\n        dom = zepto.fragment(selector, RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // If it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // If a function is given, call it when the DOM is ready\n    else if (isFunction(selector)) return $(document).ready(selector)\n    // If a Zepto collection is given, just return it\n    else if (zepto.isZ(selector)) return selector\n    else {\n      // normalize array if an array of nodes is given\n      if (isArray(selector)) dom = compact(selector)\n      // Wrap DOM nodes.\n      else if (isObject(selector))\n        dom = [selector], selector = null\n      // If it's a html fragment, create nodes from it\n      else if (fragmentRE.test(selector))\n        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // And last but no least, if it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // create a new Zepto collection from the nodes found\n    return zepto.Z(dom, selector)\n  }\n\n  // `$` will be the base `Zepto` object. When calling this\n  // function just call `$.zepto.init, which makes the implementation\n  // details of selecting nodes and creating Zepto collections\n  // patchable in plugins.\n  $ = function(selector, context){\n    return zepto.init(selector, context)\n  }\n\n  function extend(target, source, deep) {\n    for (key in source)\n      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n        if (isPlainObject(source[key]) && !isPlainObject(target[key]))\n          target[key] = {}\n        if (isArray(source[key]) && !isArray(target[key]))\n          target[key] = []\n        extend(target[key], source[key], deep)\n      }\n      else if (source[key] !== undefined) target[key] = source[key]\n  }\n\n  // Copy all but undefined properties from one or more\n  // objects to the `target` object.\n  $.extend = function(target){\n    var deep, args = slice.call(arguments, 1)\n    if (typeof target == 'boolean') {\n      deep = target\n      target = args.shift()\n    }\n    args.forEach(function(arg){ extend(target, arg, deep) })\n    return target\n  }\n\n  // `$.zepto.qsa` is Zepto's CSS selector implementation which\n  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\n  // This method can be overriden in plugins.\n  zepto.qsa = function(element, selector){\n    var found,\n        maybeID = selector[0] == '#',\n        maybeClass = !maybeID && selector[0] == '.',\n        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked\n        isSimple = simpleSelectorRE.test(nameOnly)\n    return (isDocument(element) && isSimple && maybeID) ?\n      ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :\n      (element.nodeType !== 1 && element.nodeType !== 9) ? [] :\n      slice.call(\n        isSimple && !maybeID ?\n          maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class\n          element.getElementsByTagName(selector) : // Or a tag\n          element.querySelectorAll(selector) // Or it's not simple, and we need to query all\n      )\n  }\n\n  function filtered(nodes, selector) {\n    return selector == null ? $(nodes) : $(nodes).filter(selector)\n  }\n\n  $.contains = document.documentElement.contains ?\n    function(parent, node) {\n      return parent !== node && parent.contains(node)\n    } :\n    function(parent, node) {\n      while (node && (node = node.parentNode))\n        if (node === parent) return true\n      return false\n    }\n\n  function funcArg(context, arg, idx, payload) {\n    return isFunction(arg) ? arg.call(context, idx, payload) : arg\n  }\n\n  function setAttribute(node, name, value) {\n    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\n  }\n\n  // access className property while respecting SVGAnimatedString\n  function className(node, value){\n    var klass = node.className || '',\n        svg   = klass && klass.baseVal !== undefined\n\n    if (value === undefined) return svg ? klass.baseVal : klass\n    svg ? (klass.baseVal = value) : (node.className = value)\n  }\n\n  // \"true\"  => true\n  // \"false\" => false\n  // \"null\"  => null\n  // \"42\"    => 42\n  // \"42.5\"  => 42.5\n  // \"08\"    => \"08\"\n  // JSON    => parse if valid\n  // String  => self\n  function deserializeValue(value) {\n    try {\n      return value ?\n        value == \"true\" ||\n        ( value == \"false\" ? false :\n          value == \"null\" ? null :\n          +value + \"\" == value ? +value :\n          /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\n          value )\n        : value\n    } catch(e) {\n      return value\n    }\n  }\n\n  $.type = type\n  $.isFunction = isFunction\n  $.isWindow = isWindow\n  $.isArray = isArray\n  $.isPlainObject = isPlainObject\n\n  $.isEmptyObject = function(obj) {\n    var name\n    for (name in obj) return false\n    return true\n  }\n\n  $.inArray = function(elem, array, i){\n    return emptyArray.indexOf.call(array, elem, i)\n  }\n\n  $.camelCase = camelize\n  $.trim = function(str) {\n    return str == null ? \"\" : String.prototype.trim.call(str)\n  }\n\n  // plugin compatibility\n  $.uuid = 0\n  $.support = { }\n  $.expr = { }\n\n  $.map = function(elements, callback){\n    var value, values = [], i, key\n    if (likeArray(elements))\n      for (i = 0; i < elements.length; i++) {\n        value = callback(elements[i], i)\n        if (value != null) values.push(value)\n      }\n    else\n      for (key in elements) {\n        value = callback(elements[key], key)\n        if (value != null) values.push(value)\n      }\n    return flatten(values)\n  }\n\n  $.each = function(elements, callback){\n    var i, key\n    if (likeArray(elements)) {\n      for (i = 0; i < elements.length; i++)\n        if (callback.call(elements[i], i, elements[i]) === false) return elements\n    } else {\n      for (key in elements)\n        if (callback.call(elements[key], key, elements[key]) === false) return elements\n    }\n\n    return elements\n  }\n\n  $.grep = function(elements, callback){\n    return filter.call(elements, callback)\n  }\n\n  if (window.JSON) $.parseJSON = JSON.parse\n\n  // Populate the class2type map\n  $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\n  })\n\n  // Define methods that will be available on all\n  // Zepto collections\n  $.fn = {\n    // Because a collection acts like an array\n    // copy over these useful array functions.\n    forEach: emptyArray.forEach,\n    reduce: emptyArray.reduce,\n    push: emptyArray.push,\n    sort: emptyArray.sort,\n    indexOf: emptyArray.indexOf,\n    concat: emptyArray.concat,\n\n    // `map` and `slice` in the jQuery API work differently\n    // from their array counterparts\n    map: function(fn){\n      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\n    },\n    slice: function(){\n      return $(slice.apply(this, arguments))\n    },\n\n    ready: function(callback){\n      // need to check if document.body exists for IE as that browser reports\n      // document ready when it hasn't yet created the body element\n      if (readyRE.test(document.readyState) && document.body) callback($)\n      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\n      return this\n    },\n    get: function(idx){\n      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n    },\n    toArray: function(){ return this.get() },\n    size: function(){\n      return this.length\n    },\n    remove: function(){\n      return this.each(function(){\n        if (this.parentNode != null)\n          this.parentNode.removeChild(this)\n      })\n    },\n    each: function(callback){\n      emptyArray.every.call(this, function(el, idx){\n        return callback.call(el, idx, el) !== false\n      })\n      return this\n    },\n    filter: function(selector){\n      if (isFunction(selector)) return this.not(this.not(selector))\n      return $(filter.call(this, function(element){\n        return zepto.matches(element, selector)\n      }))\n    },\n    add: function(selector,context){\n      return $(uniq(this.concat($(selector,context))))\n    },\n    is: function(selector){\n      return this.length > 0 && zepto.matches(this[0], selector)\n    },\n    not: function(selector){\n      var nodes=[]\n      if (isFunction(selector) && selector.call !== undefined)\n        this.each(function(idx){\n          if (!selector.call(this,idx)) nodes.push(this)\n        })\n      else {\n        var excludes = typeof selector == 'string' ? this.filter(selector) :\n          (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n        this.forEach(function(el){\n          if (excludes.indexOf(el) < 0) nodes.push(el)\n        })\n      }\n      return $(nodes)\n    },\n    has: function(selector){\n      return this.filter(function(){\n        return isObject(selector) ?\n          $.contains(this, selector) :\n          $(this).find(selector).size()\n      })\n    },\n    eq: function(idx){\n      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\n    },\n    first: function(){\n      var el = this[0]\n      return el && !isObject(el) ? el : $(el)\n    },\n    last: function(){\n      var el = this[this.length - 1]\n      return el && !isObject(el) ? el : $(el)\n    },\n    find: function(selector){\n      var result, $this = this\n      if (!selector) result = $()\n      else if (typeof selector == 'object')\n        result = $(selector).filter(function(){\n          var node = this\n          return emptyArray.some.call($this, function(parent){\n            return $.contains(parent, node)\n          })\n        })\n      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\n      else result = this.map(function(){ return zepto.qsa(this, selector) })\n      return result\n    },\n    closest: function(selector, context){\n      var node = this[0], collection = false\n      if (typeof selector == 'object') collection = $(selector)\n      while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\n        node = node !== context && !isDocument(node) && node.parentNode\n      return $(node)\n    },\n    parents: function(selector){\n      var ancestors = [], nodes = this\n      while (nodes.length > 0)\n        nodes = $.map(nodes, function(node){\n          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n            ancestors.push(node)\n            return node\n          }\n        })\n      return filtered(ancestors, selector)\n    },\n    parent: function(selector){\n      return filtered(uniq(this.pluck('parentNode')), selector)\n    },\n    children: function(selector){\n      return filtered(this.map(function(){ return children(this) }), selector)\n    },\n    contents: function() {\n      return this.map(function() { return slice.call(this.childNodes) })\n    },\n    siblings: function(selector){\n      return filtered(this.map(function(i, el){\n        return filter.call(children(el.parentNode), function(child){ return child!==el })\n      }), selector)\n    },\n    empty: function(){\n      return this.each(function(){ this.innerHTML = '' })\n    },\n    // `pluck` is borrowed from Prototype.js\n    pluck: function(property){\n      return $.map(this, function(el){ return el[property] })\n    },\n    show: function(){\n      return this.each(function(){\n        this.style.display == \"none\" && (this.style.display = '')\n        if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\n          this.style.display = defaultDisplay(this.nodeName)\n      })\n    },\n    replaceWith: function(newContent){\n      return this.before(newContent).remove()\n    },\n    wrap: function(structure){\n      var func = isFunction(structure)\n      if (this[0] && !func)\n        var dom   = $(structure).get(0),\n            clone = dom.parentNode || this.length > 1\n\n      return this.each(function(index){\n        $(this).wrapAll(\n          func ? structure.call(this, index) :\n            clone ? dom.cloneNode(true) : dom\n        )\n      })\n    },\n    wrapAll: function(structure){\n      if (this[0]) {\n        $(this[0]).before(structure = $(structure))\n        var children\n        // drill down to the inmost element\n        while ((children = structure.children()).length) structure = children.first()\n        $(structure).append(this)\n      }\n      return this\n    },\n    wrapInner: function(structure){\n      var func = isFunction(structure)\n      return this.each(function(index){\n        var self = $(this), contents = self.contents(),\n            dom  = func ? structure.call(this, index) : structure\n        contents.length ? contents.wrapAll(dom) : self.append(dom)\n      })\n    },\n    unwrap: function(){\n      this.parent().each(function(){\n        $(this).replaceWith($(this).children())\n      })\n      return this\n    },\n    clone: function(){\n      return this.map(function(){ return this.cloneNode(true) })\n    },\n    hide: function(){\n      return this.css(\"display\", \"none\")\n    },\n    toggle: function(setting){\n      return this.each(function(){\n        var el = $(this)\n        ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n      })\n    },\n    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\n    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\n    html: function(html){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var originHtml = this.innerHTML\n          $(this).empty().append( funcArg(this, html, idx, originHtml) )\n        }) :\n        (0 in this ? this[0].innerHTML : null)\n    },\n    text: function(text){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var newText = funcArg(this, text, idx, this.textContent)\n          this.textContent = newText == null ? '' : ''+newText\n        }) :\n        (0 in this ? this[0].textContent : null)\n    },\n    attr: function(name, value){\n      var result\n      return (typeof name == 'string' && !(1 in arguments)) ?\n        (!this.length || this[0].nodeType !== 1 ? undefined :\n          (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result\n        ) :\n        this.each(function(idx){\n          if (this.nodeType !== 1) return\n          if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\n          else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\n        })\n    },\n    removeAttr: function(name){\n      return this.each(function(){ this.nodeType === 1 && name.split(' ').forEach(function(attribute){\n        setAttribute(this, attribute)\n      }, this)})\n    },\n    prop: function(name, value){\n      name = propMap[name] || name\n      return (1 in arguments) ?\n        this.each(function(idx){\n          this[name] = funcArg(this, value, idx, this[name])\n        }) :\n        (this[0] && this[0][name])\n    },\n    data: function(name, value){\n      var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase()\n\n      var data = (1 in arguments) ?\n        this.attr(attrName, value) :\n        this.attr(attrName)\n\n      return data !== null ? deserializeValue(data) : undefined\n    },\n    val: function(value){\n      return 0 in arguments ?\n        this.each(function(idx){\n          this.value = funcArg(this, value, idx, this.value)\n        }) :\n        (this[0] && (this[0].multiple ?\n           $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :\n           this[0].value)\n        )\n    },\n    offset: function(coordinates){\n      if (coordinates) return this.each(function(index){\n        var $this = $(this),\n            coords = funcArg(this, coordinates, index, $this.offset()),\n            parentOffset = $this.offsetParent().offset(),\n            props = {\n              top:  coords.top  - parentOffset.top,\n              left: coords.left - parentOffset.left\n            }\n\n        if ($this.css('position') == 'static') props['position'] = 'relative'\n        $this.css(props)\n      })\n      if (!this.length) return null\n      var obj = this[0].getBoundingClientRect()\n      return {\n        left: obj.left + window.pageXOffset,\n        top: obj.top + window.pageYOffset,\n        width: Math.round(obj.width),\n        height: Math.round(obj.height)\n      }\n    },\n    css: function(property, value){\n      if (arguments.length < 2) {\n        var computedStyle, element = this[0]\n        if(!element) return\n        computedStyle = getComputedStyle(element, '')\n        if (typeof property == 'string')\n          return element.style[camelize(property)] || computedStyle.getPropertyValue(property)\n        else if (isArray(property)) {\n          var props = {}\n          $.each(property, function(_, prop){\n            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))\n          })\n          return props\n        }\n      }\n\n      var css = ''\n      if (type(property) == 'string') {\n        if (!value && value !== 0)\n          this.each(function(){ this.style.removeProperty(dasherize(property)) })\n        else\n          css = dasherize(property) + \":\" + maybeAddPx(property, value)\n      } else {\n        for (key in property)\n          if (!property[key] && property[key] !== 0)\n            this.each(function(){ this.style.removeProperty(dasherize(key)) })\n          else\n            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n      }\n\n      return this.each(function(){ this.style.cssText += ';' + css })\n    },\n    index: function(element){\n      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\n    },\n    hasClass: function(name){\n      if (!name) return false\n      return emptyArray.some.call(this, function(el){\n        return this.test(className(el))\n      }, classRE(name))\n    },\n    addClass: function(name){\n      if (!name) return this\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        classList = []\n        var cls = className(this), newName = funcArg(this, name, idx, cls)\n        newName.split(/\\s+/g).forEach(function(klass){\n          if (!$(this).hasClass(klass)) classList.push(klass)\n        }, this)\n        classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\n      })\n    },\n    removeClass: function(name){\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        if (name === undefined) return className(this, '')\n        classList = className(this)\n        funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\n          classList = classList.replace(classRE(klass), \" \")\n        })\n        className(this, classList.trim())\n      })\n    },\n    toggleClass: function(name, when){\n      if (!name) return this\n      return this.each(function(idx){\n        var $this = $(this), names = funcArg(this, name, idx, className(this))\n        names.split(/\\s+/g).forEach(function(klass){\n          (when === undefined ? !$this.hasClass(klass) : when) ?\n            $this.addClass(klass) : $this.removeClass(klass)\n        })\n      })\n    },\n    scrollTop: function(value){\n      if (!this.length) return\n      var hasScrollTop = 'scrollTop' in this[0]\n      if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset\n      return this.each(hasScrollTop ?\n        function(){ this.scrollTop = value } :\n        function(){ this.scrollTo(this.scrollX, value) })\n    },\n    scrollLeft: function(value){\n      if (!this.length) return\n      var hasScrollLeft = 'scrollLeft' in this[0]\n      if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset\n      return this.each(hasScrollLeft ?\n        function(){ this.scrollLeft = value } :\n        function(){ this.scrollTo(value, this.scrollY) })\n    },\n    position: function() {\n      if (!this.length) return\n\n      var elem = this[0],\n        // Get *real* offsetParent\n        offsetParent = this.offsetParent(),\n        // Get correct offsets\n        offset       = this.offset(),\n        parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\n\n      // Subtract element margins\n      // note: when an element has margin: auto the offsetLeft and marginLeft\n      // are the same in Safari causing offset.left to incorrectly be 0\n      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\n      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\n\n      // Add offsetParent borders\n      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\n      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\n\n      // Subtract the two offsets\n      return {\n        top:  offset.top  - parentOffset.top,\n        left: offset.left - parentOffset.left\n      }\n    },\n    offsetParent: function() {\n      return this.map(function(){\n        var parent = this.offsetParent || document.body\n        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\n          parent = parent.offsetParent\n        return parent\n      })\n    }\n  }\n\n  // for now\n  $.fn.detach = $.fn.remove\n\n  // Generate the `width` and `height` functions\n  ;['width', 'height'].forEach(function(dimension){\n    var dimensionProperty =\n      dimension.replace(/./, function(m){ return m[0].toUpperCase() })\n\n    $.fn[dimension] = function(value){\n      var offset, el = this[0]\n      if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :\n        isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :\n        (offset = this.offset()) && offset[dimension]\n      else return this.each(function(idx){\n        el = $(this)\n        el.css(dimension, funcArg(this, value, idx, el[dimension]()))\n      })\n    }\n  })\n\n  function traverseNode(node, fun) {\n    fun(node)\n    for (var i = 0, len = node.childNodes.length; i < len; i++)\n      traverseNode(node.childNodes[i], fun)\n  }\n\n  // Generate the `after`, `prepend`, `before`, `append`,\n  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\n  adjacencyOperators.forEach(function(operator, operatorIndex) {\n    var inside = operatorIndex % 2 //=> prepend, append\n\n    $.fn[operator] = function(){\n      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\n      var argType, nodes = $.map(arguments, function(arg) {\n            argType = type(arg)\n            return argType == \"object\" || argType == \"array\" || arg == null ?\n              arg : zepto.fragment(arg)\n          }),\n          parent, copyByClone = this.length > 1\n      if (nodes.length < 1) return this\n\n      return this.each(function(_, target){\n        parent = inside ? target : target.parentNode\n\n        // convert all methods to a \"before\" operation\n        target = operatorIndex == 0 ? target.nextSibling :\n                 operatorIndex == 1 ? target.firstChild :\n                 operatorIndex == 2 ? target :\n                 null\n\n        var parentInDocument = $.contains(document.documentElement, parent)\n\n        nodes.forEach(function(node){\n          if (copyByClone) node = node.cloneNode(true)\n          else if (!parent) return $(node).remove()\n\n          parent.insertBefore(node, target)\n          if (parentInDocument) traverseNode(node, function(el){\n            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\n               (!el.type || el.type === 'text/javascript') && !el.src)\n              window['eval'].call(window, el.innerHTML)\n          })\n        })\n      })\n    }\n\n    // after    => insertAfter\n    // prepend  => prependTo\n    // before   => insertBefore\n    // append   => appendTo\n    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\n      $(html)[operator](this)\n      return this\n    }\n  })\n\n  zepto.Z.prototype = $.fn\n\n  // Export internal API functions in the `$.zepto` namespace\n  zepto.uniq = uniq\n  zepto.deserializeValue = deserializeValue\n  $.zepto = zepto\n\n  return $\n})()\n\nwindow.Zepto = Zepto\nwindow.$ === undefined && (window.$ = Zepto)\n\n;(function($){\n  var _zid = 1, undefined,\n      slice = Array.prototype.slice,\n      isFunction = $.isFunction,\n      isString = function(obj){ return typeof obj == 'string' },\n      handlers = {},\n      specialEvents={},\n      focusinSupported = 'onfocusin' in window,\n      focus = { focus: 'focusin', blur: 'focusout' },\n      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\n\n  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\n\n  function zid(element) {\n    return element._zid || (element._zid = _zid++)\n  }\n  function findHandlers(element, event, fn, selector) {\n    event = parse(event)\n    if (event.ns) var matcher = matcherFor(event.ns)\n    return (handlers[zid(element)] || []).filter(function(handler) {\n      return handler\n        && (!event.e  || handler.e == event.e)\n        && (!event.ns || matcher.test(handler.ns))\n        && (!fn       || zid(handler.fn) === zid(fn))\n        && (!selector || handler.sel == selector)\n    })\n  }\n  function parse(event) {\n    var parts = ('' + event).split('.')\n    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\n  }\n  function matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\n  }\n\n  function eventCapture(handler, captureSetting) {\n    return handler.del &&\n      (!focusinSupported && (handler.e in focus)) ||\n      !!captureSetting\n  }\n\n  function realEvent(type) {\n    return hover[type] || (focusinSupported && focus[type]) || type\n  }\n\n  function add(element, events, fn, data, selector, delegator, capture){\n    var id = zid(element), set = (handlers[id] || (handlers[id] = []))\n    events.split(/\\s/).forEach(function(event){\n      if (event == 'ready') return $(document).ready(fn)\n      var handler   = parse(event)\n      handler.fn    = fn\n      handler.sel   = selector\n      // emulate mouseenter, mouseleave\n      if (handler.e in hover) fn = function(e){\n        var related = e.relatedTarget\n        if (!related || (related !== this && !$.contains(this, related)))\n          return handler.fn.apply(this, arguments)\n      }\n      handler.del   = delegator\n      var callback  = delegator || fn\n      handler.proxy = function(e){\n        e = compatible(e)\n        if (e.isImmediatePropagationStopped()) return\n        e.data = data\n        var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))\n        if (result === false) e.preventDefault(), e.stopPropagation()\n        return result\n      }\n      handler.i = set.length\n      set.push(handler)\n      if ('addEventListener' in element)\n        element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n    })\n  }\n  function remove(element, events, fn, selector, capture){\n    var id = zid(element)\n    ;(events || '').split(/\\s/).forEach(function(event){\n      findHandlers(element, event, fn, selector).forEach(function(handler){\n        delete handlers[id][handler.i]\n      if ('removeEventListener' in element)\n        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n      })\n    })\n  }\n\n  $.event = { add: add, remove: remove }\n\n  $.proxy = function(fn, context) {\n    var args = (2 in arguments) && slice.call(arguments, 2)\n    if (isFunction(fn)) {\n      var proxyFn = function(){ return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments) }\n      proxyFn._zid = zid(fn)\n      return proxyFn\n    } else if (isString(context)) {\n      if (args) {\n        args.unshift(fn[context], fn)\n        return $.proxy.apply(null, args)\n      } else {\n        return $.proxy(fn[context], fn)\n      }\n    } else {\n      throw new TypeError(\"expected function\")\n    }\n  }\n\n  $.fn.bind = function(event, data, callback){\n    return this.on(event, data, callback)\n  }\n  $.fn.unbind = function(event, callback){\n    return this.off(event, callback)\n  }\n  $.fn.one = function(event, selector, data, callback){\n    return this.on(event, selector, data, callback, 1)\n  }\n\n  var returnTrue = function(){return true},\n      returnFalse = function(){return false},\n      ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\n      eventMethods = {\n        preventDefault: 'isDefaultPrevented',\n        stopImmediatePropagation: 'isImmediatePropagationStopped',\n        stopPropagation: 'isPropagationStopped'\n      }\n\n  function compatible(event, source) {\n    if (source || !event.isDefaultPrevented) {\n      source || (source = event)\n\n      $.each(eventMethods, function(name, predicate) {\n        var sourceMethod = source[name]\n        event[name] = function(){\n          this[predicate] = returnTrue\n          return sourceMethod && sourceMethod.apply(source, arguments)\n        }\n        event[predicate] = returnFalse\n      })\n\n      if (source.defaultPrevented !== undefined ? source.defaultPrevented :\n          'returnValue' in source ? source.returnValue === false :\n          source.getPreventDefault && source.getPreventDefault())\n        event.isDefaultPrevented = returnTrue\n    }\n    return event\n  }\n\n  function createProxy(event) {\n    var key, proxy = { originalEvent: event }\n    for (key in event)\n      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\n\n    return compatible(proxy, event)\n  }\n\n  $.fn.delegate = function(selector, event, callback){\n    return this.on(event, selector, callback)\n  }\n  $.fn.undelegate = function(selector, event, callback){\n    return this.off(event, selector, callback)\n  }\n\n  $.fn.live = function(event, callback){\n    $(document.body).delegate(this.selector, event, callback)\n    return this\n  }\n  $.fn.die = function(event, callback){\n    $(document.body).undelegate(this.selector, event, callback)\n    return this\n  }\n\n  $.fn.on = function(event, selector, data, callback, one){\n    var autoRemove, delegator, $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.on(type, selector, data, fn, one)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = data, data = selector, selector = undefined\n    if (isFunction(data) || data === false)\n      callback = data, data = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(_, element){\n      if (one) autoRemove = function(e){\n        remove(element, e.type, callback)\n        return callback.apply(this, arguments)\n      }\n\n      if (selector) delegator = function(e){\n        var evt, match = $(e.target).closest(selector, element).get(0)\n        if (match && match !== element) {\n          evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\n          return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))\n        }\n      }\n\n      add(element, event, callback, data, selector, delegator || autoRemove)\n    })\n  }\n  $.fn.off = function(event, selector, callback){\n    var $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.off(type, selector, fn)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = selector, selector = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(){\n      remove(this, event, callback, selector)\n    })\n  }\n\n  $.fn.trigger = function(event, args){\n    event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)\n    event._args = args\n    return this.each(function(){\n      // handle focus(), blur() by calling them directly\n      if (event.type in focus && typeof this[event.type] == \"function\") this[event.type]()\n      // items in the collection might not be DOM elements\n      else if ('dispatchEvent' in this) this.dispatchEvent(event)\n      else $(this).triggerHandler(event, args)\n    })\n  }\n\n  // triggers event handlers on current element just as if an event occurred,\n  // doesn't trigger an actual event, doesn't bubble\n  $.fn.triggerHandler = function(event, args){\n    var e, result\n    this.each(function(i, element){\n      e = createProxy(isString(event) ? $.Event(event) : event)\n      e._args = args\n      e.target = element\n      $.each(findHandlers(element, event.type || event), function(i, handler){\n        result = handler.proxy(e)\n        if (e.isImmediatePropagationStopped()) return false\n      })\n    })\n    return result\n  }\n\n  // shortcut methods for `.bind(event, fn)` for each event type\n  ;('focusin focusout focus blur load resize scroll unload click dblclick '+\n  'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\n  'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n    $.fn[event] = function(callback) {\n      return (0 in arguments) ?\n        this.bind(event, callback) :\n        this.trigger(event)\n    }\n  })\n\n  $.Event = function(type, props) {\n    if (!isString(type)) props = type, type = props.type\n    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\n    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\n    event.initEvent(type, bubbles, true)\n    return compatible(event)\n  }\n\n})(Zepto)\n\n;(function($){\n  var jsonpID = 0,\n      document = window.document,\n      key,\n      name,\n      rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n      scriptTypeRE = /^(?:text|application)\\/javascript/i,\n      xmlTypeRE = /^(?:text|application)\\/xml/i,\n      jsonType = 'application/json',\n      htmlType = 'text/html',\n      blankRE = /^\\s*$/,\n      originAnchor = document.createElement('a')\n\n  originAnchor.href = window.location.href\n\n  // trigger a custom event and return false if it was cancelled\n  function triggerAndReturn(context, eventName, data) {\n    var event = $.Event(eventName)\n    $(context).trigger(event, data)\n    return !event.isDefaultPrevented()\n  }\n\n  // trigger an Ajax \"global\" event\n  function triggerGlobal(settings, context, eventName, data) {\n    if (settings.global) return triggerAndReturn(context || document, eventName, data)\n  }\n\n  // Number of active Ajax requests\n  $.active = 0\n\n  function ajaxStart(settings) {\n    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n  }\n  function ajaxStop(settings) {\n    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n  }\n\n  // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n  function ajaxBeforeSend(xhr, settings) {\n    var context = settings.context\n    if (settings.beforeSend.call(context, xhr, settings) === false ||\n        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n      return false\n\n    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n  }\n  function ajaxSuccess(data, xhr, settings, deferred) {\n    var context = settings.context, status = 'success'\n    settings.success.call(context, data, status, xhr)\n    if (deferred) deferred.resolveWith(context, [data, status, xhr])\n    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n    ajaxComplete(status, xhr, settings)\n  }\n  // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n  function ajaxError(error, type, xhr, settings, deferred) {\n    var context = settings.context\n    settings.error.call(context, xhr, type, error)\n    if (deferred) deferred.rejectWith(context, [xhr, type, error])\n    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n    ajaxComplete(type, xhr, settings)\n  }\n  // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n  function ajaxComplete(status, xhr, settings) {\n    var context = settings.context\n    settings.complete.call(context, xhr, status)\n    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n    ajaxStop(settings)\n  }\n\n  // Empty function, used as default callback\n  function empty() {}\n\n  $.ajaxJSONP = function(options, deferred){\n    if (!('type' in options)) return $.ajax(options)\n\n    var _callbackName = options.jsonpCallback,\n      callbackName = ($.isFunction(_callbackName) ?\n        _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\n      script = document.createElement('script'),\n      originalCallback = window[callbackName],\n      responseData,\n      abort = function(errorType) {\n        $(script).triggerHandler('error', errorType || 'abort')\n      },\n      xhr = { abort: abort }, abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    $(script).on('load error', function(e, errorType){\n      clearTimeout(abortTimeout)\n      $(script).off().remove()\n\n      if (e.type == 'error' || !responseData) {\n        ajaxError(null, errorType || 'error', xhr, options, deferred)\n      } else {\n        ajaxSuccess(responseData[0], xhr, options, deferred)\n      }\n\n      window[callbackName] = originalCallback\n      if (responseData && $.isFunction(originalCallback))\n        originalCallback(responseData[0])\n\n      originalCallback = responseData = undefined\n    })\n\n    if (ajaxBeforeSend(xhr, options) === false) {\n      abort('abort')\n      return xhr\n    }\n\n    window[callbackName] = function(){\n      responseData = arguments\n    }\n\n    script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\n    document.head.appendChild(script)\n\n    if (options.timeout > 0) abortTimeout = setTimeout(function(){\n      abort('timeout')\n    }, options.timeout)\n\n    return xhr\n  }\n\n  $.ajaxSettings = {\n    // Default type of request\n    type: 'GET',\n    // Callback that is executed before request\n    beforeSend: empty,\n    // Callback that is executed if the request succeeds\n    success: empty,\n    // Callback that is executed the the server drops error\n    error: empty,\n    // Callback that is executed on request complete (both: error and success)\n    complete: empty,\n    // The context for the callbacks\n    context: null,\n    // Whether to trigger \"global\" Ajax events\n    global: true,\n    // Transport\n    xhr: function () {\n      return new window.XMLHttpRequest()\n    },\n    // MIME types mapping\n    // IIS returns Javascript as \"application/x-javascript\"\n    accepts: {\n      script: 'text/javascript, application/javascript, application/x-javascript',\n      json:   jsonType,\n      xml:    'application/xml, text/xml',\n      html:   htmlType,\n      text:   'text/plain'\n    },\n    // Whether the request is to another domain\n    crossDomain: false,\n    // Default timeout\n    timeout: 0,\n    // Whether data should be serialized to string\n    processData: true,\n    // Whether the browser should be allowed to cache GET responses\n    cache: true\n  }\n\n  function mimeToDataType(mime) {\n    if (mime) mime = mime.split(';', 2)[0]\n    return mime && ( mime == htmlType ? 'html' :\n      mime == jsonType ? 'json' :\n      scriptTypeRE.test(mime) ? 'script' :\n      xmlTypeRE.test(mime) && 'xml' ) || 'text'\n  }\n\n  function appendQuery(url, query) {\n    if (query == '') return url\n    return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n  }\n\n  // serialize payload and append it to the URL for GET requests\n  function serializeData(options) {\n    if (options.processData && options.data && $.type(options.data) != \"string\")\n      options.data = $.param(options.data, options.traditional)\n    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\n      options.url = appendQuery(options.url, options.data), options.data = undefined\n  }\n\n  $.ajax = function(options){\n    var settings = $.extend({}, options || {}),\n        deferred = $.Deferred && $.Deferred(),\n        urlAnchor\n    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n    ajaxStart(settings)\n\n    if (!settings.crossDomain) {\n      urlAnchor = document.createElement('a')\n      urlAnchor.href = settings.url\n      urlAnchor.href = urlAnchor.href\n      settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\n    }\n\n    if (!settings.url) settings.url = window.location.toString()\n    serializeData(settings)\n\n    var dataType = settings.dataType, hasPlaceholder = /\\?.+=\\?/.test(settings.url)\n    if (hasPlaceholder) dataType = 'jsonp'\n\n    if (settings.cache === false || (\n         (!options || options.cache !== true) &&\n         ('script' == dataType || 'jsonp' == dataType)\n        ))\n      settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n    if ('jsonp' == dataType) {\n      if (!hasPlaceholder)\n        settings.url = appendQuery(settings.url,\n          settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\n      return $.ajaxJSONP(settings, deferred)\n    }\n\n    var mime = settings.accepts[dataType],\n        headers = { },\n        setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n        protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n        xhr = settings.xhr(),\n        nativeSetHeader = xhr.setRequestHeader,\n        abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\n    setHeader('Accept', mime || '*/*')\n    if (mime = settings.mimeType || mime) {\n      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n      xhr.overrideMimeType && xhr.overrideMimeType(mime)\n    }\n    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n      setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n\n    if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])\n    xhr.setRequestHeader = setHeader\n\n    xhr.onreadystatechange = function(){\n      if (xhr.readyState == 4) {\n        xhr.onreadystatechange = empty\n        clearTimeout(abortTimeout)\n        var result, error = false\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n          dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n          result = xhr.responseText\n\n          try {\n            // http://perfectionkills.com/global-eval-what-are-the-options/\n            if (dataType == 'script')    (1,eval)(result)\n            else if (dataType == 'xml')  result = xhr.responseXML\n            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n          } catch (e) { error = e }\n\n          if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\n          else ajaxSuccess(result, xhr, settings, deferred)\n        } else {\n          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\n        }\n      }\n    }\n\n    if (ajaxBeforeSend(xhr, settings) === false) {\n      xhr.abort()\n      ajaxError(null, 'abort', xhr, settings, deferred)\n      return xhr\n    }\n\n    if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n\n    var async = 'async' in settings ? settings.async : true\n    xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n    for (name in headers) nativeSetHeader.apply(xhr, headers[name])\n\n    if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n        xhr.onreadystatechange = empty\n        xhr.abort()\n        ajaxError(null, 'timeout', xhr, settings, deferred)\n      }, settings.timeout)\n\n    // avoid sending empty string (#319)\n    xhr.send(settings.data ? settings.data : null)\n    return xhr\n  }\n\n  // handle optional data/success arguments\n  function parseArguments(url, data, success, dataType) {\n    if ($.isFunction(data)) dataType = success, success = data, data = undefined\n    if (!$.isFunction(success)) dataType = success, success = undefined\n    return {\n      url: url\n    , data: data\n    , success: success\n    , dataType: dataType\n    }\n  }\n\n  $.get = function(/* url, data, success, dataType */){\n    return $.ajax(parseArguments.apply(null, arguments))\n  }\n\n  $.post = function(/* url, data, success, dataType */){\n    var options = parseArguments.apply(null, arguments)\n    options.type = 'POST'\n    return $.ajax(options)\n  }\n\n  $.getJSON = function(/* url, data, success */){\n    var options = parseArguments.apply(null, arguments)\n    options.dataType = 'json'\n    return $.ajax(options)\n  }\n\n  $.fn.load = function(url, data, success){\n    if (!this.length) return this\n    var self = this, parts = url.split(/\\s/), selector,\n        options = parseArguments(url, data, success),\n        callback = options.success\n    if (parts.length > 1) options.url = parts[0], selector = parts[1]\n    options.success = function(response){\n      self.html(selector ?\n        $('<div>').html(response.replace(rscript, \"\")).find(selector)\n        : response)\n      callback && callback.apply(self, arguments)\n    }\n    $.ajax(options)\n    return this\n  }\n\n  var escape = encodeURIComponent\n\n  function serialize(params, obj, traditional, scope){\n    var type, array = $.isArray(obj), hash = $.isPlainObject(obj)\n    $.each(obj, function(key, value) {\n      type = $.type(value)\n      if (scope) key = traditional ? scope :\n        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\n      // handle data in serializeArray() format\n      if (!scope && array) params.add(value.name, value.value)\n      // recurse into nested objects\n      else if (type == \"array\" || (!traditional && type == \"object\"))\n        serialize(params, value, traditional, key)\n      else params.add(key, value)\n    })\n  }\n\n  $.param = function(obj, traditional){\n    var params = []\n    params.add = function(key, value) {\n      if ($.isFunction(value)) value = value()\n      if (value == null) value = \"\"\n      this.push(escape(key) + '=' + escape(value))\n    }\n    serialize(params, obj, traditional)\n    return params.join('&').replace(/%20/g, '+')\n  }\n})(Zepto)\n\n;(function($){\n  $.fn.serializeArray = function() {\n    var name, type, result = [],\n      add = function(value) {\n        if (value.forEach) return value.forEach(add)\n        result.push({ name: name, value: value })\n      }\n    if (this[0]) $.each(this[0].elements, function(_, field){\n      type = field.type, name = field.name\n      if (name && field.nodeName.toLowerCase() != 'fieldset' &&\n        !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\n        ((type != 'radio' && type != 'checkbox') || field.checked))\n          add($(field).val())\n    })\n    return result\n  }\n\n  $.fn.serialize = function(){\n    var result = []\n    this.serializeArray().forEach(function(elm){\n      result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\n    })\n    return result.join('&')\n  }\n\n  $.fn.submit = function(callback) {\n    if (0 in arguments) this.bind('submit', callback)\n    else if (this.length) {\n      var event = $.Event('submit')\n      this.eq(0).trigger(event)\n      if (!event.isDefaultPrevented()) this.get(0).submit()\n    }\n    return this\n  }\n\n})(Zepto)\n\n;(function($){\n  // __proto__ doesn't exist on IE<11, so redefine\n  // the Z function to use object extension instead\n  if (!('__proto__' in {})) {\n    $.extend($.zepto, {\n      Z: function(dom, selector){\n        dom = dom || []\n        $.extend(dom, $.fn)\n        dom.selector = selector || ''\n        dom.__Z = true\n        return dom\n      },\n      // this is a kludge but works\n      isZ: function(object){\n        return $.type(object) === 'array' && '__Z' in object\n      }\n    })\n  }\n\n  // getComputedStyle shouldn't freak out when called\n  // without a valid element as argument\n  try {\n    getComputedStyle(undefined)\n  } catch(e) {\n    var nativeGetComputedStyle = getComputedStyle;\n    window.getComputedStyle = function(element){\n      try {\n        return nativeGetComputedStyle(element)\n      } catch(e) {\n        return null\n      }\n    }\n  }\n})(Zepto)\n;\n\n\n}\n},{}]},{},[2])\n\n","    require('./zepto')();\n    require('./flexible.js')();\n\n    var cache = {};\n\n    this.tmpl = function tmpl(str, data) {\n        // Figure out if we're getting a template, or if we need to\n        // load the template - and be sure to cache the result.\n        var fn = !/\\W/.test(str) ?\n            cache[str] = cache[str] ||\n                tmpl(document.getElementById(str).innerHTML) :\n\n            // Generate a reusable function that will serve as a template\n            // generator (and which will be cached).\n            new Function(\"obj\",\n                \"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n                    // Introduce the data as local variables using with(){}\n                \"with(obj){p.push('\" +\n\n                    // Convert the template into pure JavaScript\n                str\n                    .replace(/[\\r\\t\\n]/g, \" \")\n                    .split(\"<%\").join(\"\\t\")\n                    .replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n                    .replace(/\\t=(.*?)%>/g, \"',$1,'\")\n                    .split(\"\\t\").join(\"');\")\n                    .split(\"%>\").join(\"p.push('\")\n                    .split(\"\\r\").join(\"\\\\'\")\n                + \"');}return p.join('');\");\n        // Provide some basic currying to the user\n        return data ? fn(data) : fn;\n    };\n\n\n    $.ajax({\n        type: 'GET',\n        url: 'hello.json',\n        dataType: 'json',\n        success: function(data) {\n            var data = data.data;\n            $('<pre>').text(JSON.stringify(data, null, 4)).appendTo('body');\n        }\n\n    });\n\n\n\n\n\n","module.exports= function(){\n\n/* Zepto v1.1.6 - zepto event ajax form ie - zeptojs.com/license */\n\nvar Zepto = (function() {\n  var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,\n    document = window.document,\n    elementDisplay = {}, classCache = {},\n    cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\n    fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n    singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n    tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n    rootNodeRE = /^(?:body|html)$/i,\n    capitalRE = /([A-Z])/g,\n\n    // special attributes that should be get/set via method calls\n    methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\n    adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\n    table = document.createElement('table'),\n    tableRow = document.createElement('tr'),\n    containers = {\n      'tr': document.createElement('tbody'),\n      'tbody': table, 'thead': table, 'tfoot': table,\n      'td': tableRow, 'th': tableRow,\n      '*': document.createElement('div')\n    },\n    readyRE = /complete|loaded|interactive/,\n    simpleSelectorRE = /^[\\w-]*$/,\n    class2type = {},\n    toString = class2type.toString,\n    zepto = {},\n    camelize, uniq,\n    tempParent = document.createElement('div'),\n    propMap = {\n      'tabindex': 'tabIndex',\n      'readonly': 'readOnly',\n      'for': 'htmlFor',\n      'class': 'className',\n      'maxlength': 'maxLength',\n      'cellspacing': 'cellSpacing',\n      'cellpadding': 'cellPadding',\n      'rowspan': 'rowSpan',\n      'colspan': 'colSpan',\n      'usemap': 'useMap',\n      'frameborder': 'frameBorder',\n      'contenteditable': 'contentEditable'\n    },\n    isArray = Array.isArray ||\n      function(object){ return object instanceof Array }\n\n  zepto.matches = function(element, selector) {\n    if (!selector || !element || element.nodeType !== 1) return false\n    var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||\n                          element.oMatchesSelector || element.matchesSelector\n    if (matchesSelector) return matchesSelector.call(element, selector)\n    // fall back to performing a selector:\n    var match, parent = element.parentNode, temp = !parent\n    if (temp) (parent = tempParent).appendChild(element)\n    match = ~zepto.qsa(parent, selector).indexOf(element)\n    temp && tempParent.removeChild(element)\n    return match\n  }\n\n  function type(obj) {\n    return obj == null ? String(obj) :\n      class2type[toString.call(obj)] || \"object\"\n  }\n\n  function isFunction(value) { return type(value) == \"function\" }\n  function isWindow(obj)     { return obj != null && obj == obj.window }\n  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\n  function isObject(obj)     { return type(obj) == \"object\" }\n  function isPlainObject(obj) {\n    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype\n  }\n  function likeArray(obj) { return typeof obj.length == 'number' }\n\n  function compact(array) { return filter.call(array, function(item){ return item != null }) }\n  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\n  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\n  function dasherize(str) {\n    return str.replace(/::/g, '/')\n           .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n           .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n           .replace(/_/g, '-')\n           .toLowerCase()\n  }\n  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\n\n  function classRE(name) {\n    return name in classCache ?\n      classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\n  }\n\n  function maybeAddPx(name, value) {\n    return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n  }\n\n  function defaultDisplay(nodeName) {\n    var element, display\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName)\n      document.body.appendChild(element)\n      display = getComputedStyle(element, '').getPropertyValue(\"display\")\n      element.parentNode.removeChild(element)\n      display == \"none\" && (display = \"block\")\n      elementDisplay[nodeName] = display\n    }\n    return elementDisplay[nodeName]\n  }\n\n  function children(element) {\n    return 'children' in element ?\n      slice.call(element.children) :\n      $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\n  }\n\n  // `$.zepto.fragment` takes a html string and an optional tag name\n  // to generate DOM nodes nodes from the given html string.\n  // The generated DOM nodes are returned as an array.\n  // This function can be overriden in plugins for example to make\n  // it compatible with browsers that don't support the DOM fully.\n  zepto.fragment = function(html, name, properties) {\n    var dom, nodes, container\n\n    // A special case optimization for a single tag\n    if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))\n\n    if (!dom) {\n      if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\n      if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\n      if (!(name in containers)) name = '*'\n\n      container = containers[name]\n      container.innerHTML = '' + html\n      dom = $.each(slice.call(container.childNodes), function(){\n        container.removeChild(this)\n      })\n    }\n\n    if (isPlainObject(properties)) {\n      nodes = $(dom)\n      $.each(properties, function(key, value) {\n        if (methodAttributes.indexOf(key) > -1) nodes[key](value)\n        else nodes.attr(key, value)\n      })\n    }\n\n    return dom\n  }\n\n  // `$.zepto.Z` swaps out the prototype of the given `dom` array\n  // of nodes with `$.fn` and thus supplying all the Zepto functions\n  // to the array. Note that `__proto__` is not supported on Internet\n  // Explorer. This method can be overriden in plugins.\n  zepto.Z = function(dom, selector) {\n    dom = dom || []\n    dom.__proto__ = $.fn\n    dom.selector = selector || ''\n    return dom\n  }\n\n  // `$.zepto.isZ` should return `true` if the given object is a Zepto\n  // collection. This method can be overriden in plugins.\n  zepto.isZ = function(object) {\n    return object instanceof zepto.Z\n  }\n\n  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\n  // takes a CSS selector and an optional context (and handles various\n  // special cases).\n  // This method can be overriden in plugins.\n  zepto.init = function(selector, context) {\n    var dom\n    // If nothing given, return an empty Zepto collection\n    if (!selector) return zepto.Z()\n    // Optimize for string selectors\n    else if (typeof selector == 'string') {\n      selector = selector.trim()\n      // If it's a html fragment, create nodes from it\n      // Note: In both Chrome 21 and Firefox 15, DOM error 12\n      // is thrown if the fragment doesn't begin with <\n      if (selector[0] == '<' && fragmentRE.test(selector))\n        dom = zepto.fragment(selector, RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // If it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // If a function is given, call it when the DOM is ready\n    else if (isFunction(selector)) return $(document).ready(selector)\n    // If a Zepto collection is given, just return it\n    else if (zepto.isZ(selector)) return selector\n    else {\n      // normalize array if an array of nodes is given\n      if (isArray(selector)) dom = compact(selector)\n      // Wrap DOM nodes.\n      else if (isObject(selector))\n        dom = [selector], selector = null\n      // If it's a html fragment, create nodes from it\n      else if (fragmentRE.test(selector))\n        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // And last but no least, if it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // create a new Zepto collection from the nodes found\n    return zepto.Z(dom, selector)\n  }\n\n  // `$` will be the base `Zepto` object. When calling this\n  // function just call `$.zepto.init, which makes the implementation\n  // details of selecting nodes and creating Zepto collections\n  // patchable in plugins.\n  $ = function(selector, context){\n    return zepto.init(selector, context)\n  }\n\n  function extend(target, source, deep) {\n    for (key in source)\n      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n        if (isPlainObject(source[key]) && !isPlainObject(target[key]))\n          target[key] = {}\n        if (isArray(source[key]) && !isArray(target[key]))\n          target[key] = []\n        extend(target[key], source[key], deep)\n      }\n      else if (source[key] !== undefined) target[key] = source[key]\n  }\n\n  // Copy all but undefined properties from one or more\n  // objects to the `target` object.\n  $.extend = function(target){\n    var deep, args = slice.call(arguments, 1)\n    if (typeof target == 'boolean') {\n      deep = target\n      target = args.shift()\n    }\n    args.forEach(function(arg){ extend(target, arg, deep) })\n    return target\n  }\n\n  // `$.zepto.qsa` is Zepto's CSS selector implementation which\n  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\n  // This method can be overriden in plugins.\n  zepto.qsa = function(element, selector){\n    var found,\n        maybeID = selector[0] == '#',\n        maybeClass = !maybeID && selector[0] == '.',\n        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked\n        isSimple = simpleSelectorRE.test(nameOnly)\n    return (isDocument(element) && isSimple && maybeID) ?\n      ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :\n      (element.nodeType !== 1 && element.nodeType !== 9) ? [] :\n      slice.call(\n        isSimple && !maybeID ?\n          maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class\n          element.getElementsByTagName(selector) : // Or a tag\n          element.querySelectorAll(selector) // Or it's not simple, and we need to query all\n      )\n  }\n\n  function filtered(nodes, selector) {\n    return selector == null ? $(nodes) : $(nodes).filter(selector)\n  }\n\n  $.contains = document.documentElement.contains ?\n    function(parent, node) {\n      return parent !== node && parent.contains(node)\n    } :\n    function(parent, node) {\n      while (node && (node = node.parentNode))\n        if (node === parent) return true\n      return false\n    }\n\n  function funcArg(context, arg, idx, payload) {\n    return isFunction(arg) ? arg.call(context, idx, payload) : arg\n  }\n\n  function setAttribute(node, name, value) {\n    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\n  }\n\n  // access className property while respecting SVGAnimatedString\n  function className(node, value){\n    var klass = node.className || '',\n        svg   = klass && klass.baseVal !== undefined\n\n    if (value === undefined) return svg ? klass.baseVal : klass\n    svg ? (klass.baseVal = value) : (node.className = value)\n  }\n\n  // \"true\"  => true\n  // \"false\" => false\n  // \"null\"  => null\n  // \"42\"    => 42\n  // \"42.5\"  => 42.5\n  // \"08\"    => \"08\"\n  // JSON    => parse if valid\n  // String  => self\n  function deserializeValue(value) {\n    try {\n      return value ?\n        value == \"true\" ||\n        ( value == \"false\" ? false :\n          value == \"null\" ? null :\n          +value + \"\" == value ? +value :\n          /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\n          value )\n        : value\n    } catch(e) {\n      return value\n    }\n  }\n\n  $.type = type\n  $.isFunction = isFunction\n  $.isWindow = isWindow\n  $.isArray = isArray\n  $.isPlainObject = isPlainObject\n\n  $.isEmptyObject = function(obj) {\n    var name\n    for (name in obj) return false\n    return true\n  }\n\n  $.inArray = function(elem, array, i){\n    return emptyArray.indexOf.call(array, elem, i)\n  }\n\n  $.camelCase = camelize\n  $.trim = function(str) {\n    return str == null ? \"\" : String.prototype.trim.call(str)\n  }\n\n  // plugin compatibility\n  $.uuid = 0\n  $.support = { }\n  $.expr = { }\n\n  $.map = function(elements, callback){\n    var value, values = [], i, key\n    if (likeArray(elements))\n      for (i = 0; i < elements.length; i++) {\n        value = callback(elements[i], i)\n        if (value != null) values.push(value)\n      }\n    else\n      for (key in elements) {\n        value = callback(elements[key], key)\n        if (value != null) values.push(value)\n      }\n    return flatten(values)\n  }\n\n  $.each = function(elements, callback){\n    var i, key\n    if (likeArray(elements)) {\n      for (i = 0; i < elements.length; i++)\n        if (callback.call(elements[i], i, elements[i]) === false) return elements\n    } else {\n      for (key in elements)\n        if (callback.call(elements[key], key, elements[key]) === false) return elements\n    }\n\n    return elements\n  }\n\n  $.grep = function(elements, callback){\n    return filter.call(elements, callback)\n  }\n\n  if (window.JSON) $.parseJSON = JSON.parse\n\n  // Populate the class2type map\n  $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\n  })\n\n  // Define methods that will be available on all\n  // Zepto collections\n  $.fn = {\n    // Because a collection acts like an array\n    // copy over these useful array functions.\n    forEach: emptyArray.forEach,\n    reduce: emptyArray.reduce,\n    push: emptyArray.push,\n    sort: emptyArray.sort,\n    indexOf: emptyArray.indexOf,\n    concat: emptyArray.concat,\n\n    // `map` and `slice` in the jQuery API work differently\n    // from their array counterparts\n    map: function(fn){\n      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\n    },\n    slice: function(){\n      return $(slice.apply(this, arguments))\n    },\n\n    ready: function(callback){\n      // need to check if document.body exists for IE as that browser reports\n      // document ready when it hasn't yet created the body element\n      if (readyRE.test(document.readyState) && document.body) callback($)\n      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\n      return this\n    },\n    get: function(idx){\n      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n    },\n    toArray: function(){ return this.get() },\n    size: function(){\n      return this.length\n    },\n    remove: function(){\n      return this.each(function(){\n        if (this.parentNode != null)\n          this.parentNode.removeChild(this)\n      })\n    },\n    each: function(callback){\n      emptyArray.every.call(this, function(el, idx){\n        return callback.call(el, idx, el) !== false\n      })\n      return this\n    },\n    filter: function(selector){\n      if (isFunction(selector)) return this.not(this.not(selector))\n      return $(filter.call(this, function(element){\n        return zepto.matches(element, selector)\n      }))\n    },\n    add: function(selector,context){\n      return $(uniq(this.concat($(selector,context))))\n    },\n    is: function(selector){\n      return this.length > 0 && zepto.matches(this[0], selector)\n    },\n    not: function(selector){\n      var nodes=[]\n      if (isFunction(selector) && selector.call !== undefined)\n        this.each(function(idx){\n          if (!selector.call(this,idx)) nodes.push(this)\n        })\n      else {\n        var excludes = typeof selector == 'string' ? this.filter(selector) :\n          (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n        this.forEach(function(el){\n          if (excludes.indexOf(el) < 0) nodes.push(el)\n        })\n      }\n      return $(nodes)\n    },\n    has: function(selector){\n      return this.filter(function(){\n        return isObject(selector) ?\n          $.contains(this, selector) :\n          $(this).find(selector).size()\n      })\n    },\n    eq: function(idx){\n      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\n    },\n    first: function(){\n      var el = this[0]\n      return el && !isObject(el) ? el : $(el)\n    },\n    last: function(){\n      var el = this[this.length - 1]\n      return el && !isObject(el) ? el : $(el)\n    },\n    find: function(selector){\n      var result, $this = this\n      if (!selector) result = $()\n      else if (typeof selector == 'object')\n        result = $(selector).filter(function(){\n          var node = this\n          return emptyArray.some.call($this, function(parent){\n            return $.contains(parent, node)\n          })\n        })\n      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\n      else result = this.map(function(){ return zepto.qsa(this, selector) })\n      return result\n    },\n    closest: function(selector, context){\n      var node = this[0], collection = false\n      if (typeof selector == 'object') collection = $(selector)\n      while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\n        node = node !== context && !isDocument(node) && node.parentNode\n      return $(node)\n    },\n    parents: function(selector){\n      var ancestors = [], nodes = this\n      while (nodes.length > 0)\n        nodes = $.map(nodes, function(node){\n          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n            ancestors.push(node)\n            return node\n          }\n        })\n      return filtered(ancestors, selector)\n    },\n    parent: function(selector){\n      return filtered(uniq(this.pluck('parentNode')), selector)\n    },\n    children: function(selector){\n      return filtered(this.map(function(){ return children(this) }), selector)\n    },\n    contents: function() {\n      return this.map(function() { return slice.call(this.childNodes) })\n    },\n    siblings: function(selector){\n      return filtered(this.map(function(i, el){\n        return filter.call(children(el.parentNode), function(child){ return child!==el })\n      }), selector)\n    },\n    empty: function(){\n      return this.each(function(){ this.innerHTML = '' })\n    },\n    // `pluck` is borrowed from Prototype.js\n    pluck: function(property){\n      return $.map(this, function(el){ return el[property] })\n    },\n    show: function(){\n      return this.each(function(){\n        this.style.display == \"none\" && (this.style.display = '')\n        if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\n          this.style.display = defaultDisplay(this.nodeName)\n      })\n    },\n    replaceWith: function(newContent){\n      return this.before(newContent).remove()\n    },\n    wrap: function(structure){\n      var func = isFunction(structure)\n      if (this[0] && !func)\n        var dom   = $(structure).get(0),\n            clone = dom.parentNode || this.length > 1\n\n      return this.each(function(index){\n        $(this).wrapAll(\n          func ? structure.call(this, index) :\n            clone ? dom.cloneNode(true) : dom\n        )\n      })\n    },\n    wrapAll: function(structure){\n      if (this[0]) {\n        $(this[0]).before(structure = $(structure))\n        var children\n        // drill down to the inmost element\n        while ((children = structure.children()).length) structure = children.first()\n        $(structure).append(this)\n      }\n      return this\n    },\n    wrapInner: function(structure){\n      var func = isFunction(structure)\n      return this.each(function(index){\n        var self = $(this), contents = self.contents(),\n            dom  = func ? structure.call(this, index) : structure\n        contents.length ? contents.wrapAll(dom) : self.append(dom)\n      })\n    },\n    unwrap: function(){\n      this.parent().each(function(){\n        $(this).replaceWith($(this).children())\n      })\n      return this\n    },\n    clone: function(){\n      return this.map(function(){ return this.cloneNode(true) })\n    },\n    hide: function(){\n      return this.css(\"display\", \"none\")\n    },\n    toggle: function(setting){\n      return this.each(function(){\n        var el = $(this)\n        ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n      })\n    },\n    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\n    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\n    html: function(html){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var originHtml = this.innerHTML\n          $(this).empty().append( funcArg(this, html, idx, originHtml) )\n        }) :\n        (0 in this ? this[0].innerHTML : null)\n    },\n    text: function(text){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var newText = funcArg(this, text, idx, this.textContent)\n          this.textContent = newText == null ? '' : ''+newText\n        }) :\n        (0 in this ? this[0].textContent : null)\n    },\n    attr: function(name, value){\n      var result\n      return (typeof name == 'string' && !(1 in arguments)) ?\n        (!this.length || this[0].nodeType !== 1 ? undefined :\n          (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result\n        ) :\n        this.each(function(idx){\n          if (this.nodeType !== 1) return\n          if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\n          else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\n        })\n    },\n    removeAttr: function(name){\n      return this.each(function(){ this.nodeType === 1 && name.split(' ').forEach(function(attribute){\n        setAttribute(this, attribute)\n      }, this)})\n    },\n    prop: function(name, value){\n      name = propMap[name] || name\n      return (1 in arguments) ?\n        this.each(function(idx){\n          this[name] = funcArg(this, value, idx, this[name])\n        }) :\n        (this[0] && this[0][name])\n    },\n    data: function(name, value){\n      var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase()\n\n      var data = (1 in arguments) ?\n        this.attr(attrName, value) :\n        this.attr(attrName)\n\n      return data !== null ? deserializeValue(data) : undefined\n    },\n    val: function(value){\n      return 0 in arguments ?\n        this.each(function(idx){\n          this.value = funcArg(this, value, idx, this.value)\n        }) :\n        (this[0] && (this[0].multiple ?\n           $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :\n           this[0].value)\n        )\n    },\n    offset: function(coordinates){\n      if (coordinates) return this.each(function(index){\n        var $this = $(this),\n            coords = funcArg(this, coordinates, index, $this.offset()),\n            parentOffset = $this.offsetParent().offset(),\n            props = {\n              top:  coords.top  - parentOffset.top,\n              left: coords.left - parentOffset.left\n            }\n\n        if ($this.css('position') == 'static') props['position'] = 'relative'\n        $this.css(props)\n      })\n      if (!this.length) return null\n      var obj = this[0].getBoundingClientRect()\n      return {\n        left: obj.left + window.pageXOffset,\n        top: obj.top + window.pageYOffset,\n        width: Math.round(obj.width),\n        height: Math.round(obj.height)\n      }\n    },\n    css: function(property, value){\n      if (arguments.length < 2) {\n        var computedStyle, element = this[0]\n        if(!element) return\n        computedStyle = getComputedStyle(element, '')\n        if (typeof property == 'string')\n          return element.style[camelize(property)] || computedStyle.getPropertyValue(property)\n        else if (isArray(property)) {\n          var props = {}\n          $.each(property, function(_, prop){\n            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))\n          })\n          return props\n        }\n      }\n\n      var css = ''\n      if (type(property) == 'string') {\n        if (!value && value !== 0)\n          this.each(function(){ this.style.removeProperty(dasherize(property)) })\n        else\n          css = dasherize(property) + \":\" + maybeAddPx(property, value)\n      } else {\n        for (key in property)\n          if (!property[key] && property[key] !== 0)\n            this.each(function(){ this.style.removeProperty(dasherize(key)) })\n          else\n            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n      }\n\n      return this.each(function(){ this.style.cssText += ';' + css })\n    },\n    index: function(element){\n      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\n    },\n    hasClass: function(name){\n      if (!name) return false\n      return emptyArray.some.call(this, function(el){\n        return this.test(className(el))\n      }, classRE(name))\n    },\n    addClass: function(name){\n      if (!name) return this\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        classList = []\n        var cls = className(this), newName = funcArg(this, name, idx, cls)\n        newName.split(/\\s+/g).forEach(function(klass){\n          if (!$(this).hasClass(klass)) classList.push(klass)\n        }, this)\n        classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\n      })\n    },\n    removeClass: function(name){\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        if (name === undefined) return className(this, '')\n        classList = className(this)\n        funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\n          classList = classList.replace(classRE(klass), \" \")\n        })\n        className(this, classList.trim())\n      })\n    },\n    toggleClass: function(name, when){\n      if (!name) return this\n      return this.each(function(idx){\n        var $this = $(this), names = funcArg(this, name, idx, className(this))\n        names.split(/\\s+/g).forEach(function(klass){\n          (when === undefined ? !$this.hasClass(klass) : when) ?\n            $this.addClass(klass) : $this.removeClass(klass)\n        })\n      })\n    },\n    scrollTop: function(value){\n      if (!this.length) return\n      var hasScrollTop = 'scrollTop' in this[0]\n      if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset\n      return this.each(hasScrollTop ?\n        function(){ this.scrollTop = value } :\n        function(){ this.scrollTo(this.scrollX, value) })\n    },\n    scrollLeft: function(value){\n      if (!this.length) return\n      var hasScrollLeft = 'scrollLeft' in this[0]\n      if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset\n      return this.each(hasScrollLeft ?\n        function(){ this.scrollLeft = value } :\n        function(){ this.scrollTo(value, this.scrollY) })\n    },\n    position: function() {\n      if (!this.length) return\n\n      var elem = this[0],\n        // Get *real* offsetParent\n        offsetParent = this.offsetParent(),\n        // Get correct offsets\n        offset       = this.offset(),\n        parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\n\n      // Subtract element margins\n      // note: when an element has margin: auto the offsetLeft and marginLeft\n      // are the same in Safari causing offset.left to incorrectly be 0\n      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\n      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\n\n      // Add offsetParent borders\n      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\n      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\n\n      // Subtract the two offsets\n      return {\n        top:  offset.top  - parentOffset.top,\n        left: offset.left - parentOffset.left\n      }\n    },\n    offsetParent: function() {\n      return this.map(function(){\n        var parent = this.offsetParent || document.body\n        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\n          parent = parent.offsetParent\n        return parent\n      })\n    }\n  }\n\n  // for now\n  $.fn.detach = $.fn.remove\n\n  // Generate the `width` and `height` functions\n  ;['width', 'height'].forEach(function(dimension){\n    var dimensionProperty =\n      dimension.replace(/./, function(m){ return m[0].toUpperCase() })\n\n    $.fn[dimension] = function(value){\n      var offset, el = this[0]\n      if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :\n        isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :\n        (offset = this.offset()) && offset[dimension]\n      else return this.each(function(idx){\n        el = $(this)\n        el.css(dimension, funcArg(this, value, idx, el[dimension]()))\n      })\n    }\n  })\n\n  function traverseNode(node, fun) {\n    fun(node)\n    for (var i = 0, len = node.childNodes.length; i < len; i++)\n      traverseNode(node.childNodes[i], fun)\n  }\n\n  // Generate the `after`, `prepend`, `before`, `append`,\n  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\n  adjacencyOperators.forEach(function(operator, operatorIndex) {\n    var inside = operatorIndex % 2 //=> prepend, append\n\n    $.fn[operator] = function(){\n      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\n      var argType, nodes = $.map(arguments, function(arg) {\n            argType = type(arg)\n            return argType == \"object\" || argType == \"array\" || arg == null ?\n              arg : zepto.fragment(arg)\n          }),\n          parent, copyByClone = this.length > 1\n      if (nodes.length < 1) return this\n\n      return this.each(function(_, target){\n        parent = inside ? target : target.parentNode\n\n        // convert all methods to a \"before\" operation\n        target = operatorIndex == 0 ? target.nextSibling :\n                 operatorIndex == 1 ? target.firstChild :\n                 operatorIndex == 2 ? target :\n                 null\n\n        var parentInDocument = $.contains(document.documentElement, parent)\n\n        nodes.forEach(function(node){\n          if (copyByClone) node = node.cloneNode(true)\n          else if (!parent) return $(node).remove()\n\n          parent.insertBefore(node, target)\n          if (parentInDocument) traverseNode(node, function(el){\n            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\n               (!el.type || el.type === 'text/javascript') && !el.src)\n              window['eval'].call(window, el.innerHTML)\n          })\n        })\n      })\n    }\n\n    // after    => insertAfter\n    // prepend  => prependTo\n    // before   => insertBefore\n    // append   => appendTo\n    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\n      $(html)[operator](this)\n      return this\n    }\n  })\n\n  zepto.Z.prototype = $.fn\n\n  // Export internal API functions in the `$.zepto` namespace\n  zepto.uniq = uniq\n  zepto.deserializeValue = deserializeValue\n  $.zepto = zepto\n\n  return $\n})()\n\nwindow.Zepto = Zepto\nwindow.$ === undefined && (window.$ = Zepto)\n\n;(function($){\n  var _zid = 1, undefined,\n      slice = Array.prototype.slice,\n      isFunction = $.isFunction,\n      isString = function(obj){ return typeof obj == 'string' },\n      handlers = {},\n      specialEvents={},\n      focusinSupported = 'onfocusin' in window,\n      focus = { focus: 'focusin', blur: 'focusout' },\n      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\n\n  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\n\n  function zid(element) {\n    return element._zid || (element._zid = _zid++)\n  }\n  function findHandlers(element, event, fn, selector) {\n    event = parse(event)\n    if (event.ns) var matcher = matcherFor(event.ns)\n    return (handlers[zid(element)] || []).filter(function(handler) {\n      return handler\n        && (!event.e  || handler.e == event.e)\n        && (!event.ns || matcher.test(handler.ns))\n        && (!fn       || zid(handler.fn) === zid(fn))\n        && (!selector || handler.sel == selector)\n    })\n  }\n  function parse(event) {\n    var parts = ('' + event).split('.')\n    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\n  }\n  function matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\n  }\n\n  function eventCapture(handler, captureSetting) {\n    return handler.del &&\n      (!focusinSupported && (handler.e in focus)) ||\n      !!captureSetting\n  }\n\n  function realEvent(type) {\n    return hover[type] || (focusinSupported && focus[type]) || type\n  }\n\n  function add(element, events, fn, data, selector, delegator, capture){\n    var id = zid(element), set = (handlers[id] || (handlers[id] = []))\n    events.split(/\\s/).forEach(function(event){\n      if (event == 'ready') return $(document).ready(fn)\n      var handler   = parse(event)\n      handler.fn    = fn\n      handler.sel   = selector\n      // emulate mouseenter, mouseleave\n      if (handler.e in hover) fn = function(e){\n        var related = e.relatedTarget\n        if (!related || (related !== this && !$.contains(this, related)))\n          return handler.fn.apply(this, arguments)\n      }\n      handler.del   = delegator\n      var callback  = delegator || fn\n      handler.proxy = function(e){\n        e = compatible(e)\n        if (e.isImmediatePropagationStopped()) return\n        e.data = data\n        var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))\n        if (result === false) e.preventDefault(), e.stopPropagation()\n        return result\n      }\n      handler.i = set.length\n      set.push(handler)\n      if ('addEventListener' in element)\n        element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n    })\n  }\n  function remove(element, events, fn, selector, capture){\n    var id = zid(element)\n    ;(events || '').split(/\\s/).forEach(function(event){\n      findHandlers(element, event, fn, selector).forEach(function(handler){\n        delete handlers[id][handler.i]\n      if ('removeEventListener' in element)\n        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n      })\n    })\n  }\n\n  $.event = { add: add, remove: remove }\n\n  $.proxy = function(fn, context) {\n    var args = (2 in arguments) && slice.call(arguments, 2)\n    if (isFunction(fn)) {\n      var proxyFn = function(){ return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments) }\n      proxyFn._zid = zid(fn)\n      return proxyFn\n    } else if (isString(context)) {\n      if (args) {\n        args.unshift(fn[context], fn)\n        return $.proxy.apply(null, args)\n      } else {\n        return $.proxy(fn[context], fn)\n      }\n    } else {\n      throw new TypeError(\"expected function\")\n    }\n  }\n\n  $.fn.bind = function(event, data, callback){\n    return this.on(event, data, callback)\n  }\n  $.fn.unbind = function(event, callback){\n    return this.off(event, callback)\n  }\n  $.fn.one = function(event, selector, data, callback){\n    return this.on(event, selector, data, callback, 1)\n  }\n\n  var returnTrue = function(){return true},\n      returnFalse = function(){return false},\n      ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\n      eventMethods = {\n        preventDefault: 'isDefaultPrevented',\n        stopImmediatePropagation: 'isImmediatePropagationStopped',\n        stopPropagation: 'isPropagationStopped'\n      }\n\n  function compatible(event, source) {\n    if (source || !event.isDefaultPrevented) {\n      source || (source = event)\n\n      $.each(eventMethods, function(name, predicate) {\n        var sourceMethod = source[name]\n        event[name] = function(){\n          this[predicate] = returnTrue\n          return sourceMethod && sourceMethod.apply(source, arguments)\n        }\n        event[predicate] = returnFalse\n      })\n\n      if (source.defaultPrevented !== undefined ? source.defaultPrevented :\n          'returnValue' in source ? source.returnValue === false :\n          source.getPreventDefault && source.getPreventDefault())\n        event.isDefaultPrevented = returnTrue\n    }\n    return event\n  }\n\n  function createProxy(event) {\n    var key, proxy = { originalEvent: event }\n    for (key in event)\n      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\n\n    return compatible(proxy, event)\n  }\n\n  $.fn.delegate = function(selector, event, callback){\n    return this.on(event, selector, callback)\n  }\n  $.fn.undelegate = function(selector, event, callback){\n    return this.off(event, selector, callback)\n  }\n\n  $.fn.live = function(event, callback){\n    $(document.body).delegate(this.selector, event, callback)\n    return this\n  }\n  $.fn.die = function(event, callback){\n    $(document.body).undelegate(this.selector, event, callback)\n    return this\n  }\n\n  $.fn.on = function(event, selector, data, callback, one){\n    var autoRemove, delegator, $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.on(type, selector, data, fn, one)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = data, data = selector, selector = undefined\n    if (isFunction(data) || data === false)\n      callback = data, data = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(_, element){\n      if (one) autoRemove = function(e){\n        remove(element, e.type, callback)\n        return callback.apply(this, arguments)\n      }\n\n      if (selector) delegator = function(e){\n        var evt, match = $(e.target).closest(selector, element).get(0)\n        if (match && match !== element) {\n          evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\n          return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))\n        }\n      }\n\n      add(element, event, callback, data, selector, delegator || autoRemove)\n    })\n  }\n  $.fn.off = function(event, selector, callback){\n    var $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.off(type, selector, fn)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = selector, selector = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(){\n      remove(this, event, callback, selector)\n    })\n  }\n\n  $.fn.trigger = function(event, args){\n    event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)\n    event._args = args\n    return this.each(function(){\n      // handle focus(), blur() by calling them directly\n      if (event.type in focus && typeof this[event.type] == \"function\") this[event.type]()\n      // items in the collection might not be DOM elements\n      else if ('dispatchEvent' in this) this.dispatchEvent(event)\n      else $(this).triggerHandler(event, args)\n    })\n  }\n\n  // triggers event handlers on current element just as if an event occurred,\n  // doesn't trigger an actual event, doesn't bubble\n  $.fn.triggerHandler = function(event, args){\n    var e, result\n    this.each(function(i, element){\n      e = createProxy(isString(event) ? $.Event(event) : event)\n      e._args = args\n      e.target = element\n      $.each(findHandlers(element, event.type || event), function(i, handler){\n        result = handler.proxy(e)\n        if (e.isImmediatePropagationStopped()) return false\n      })\n    })\n    return result\n  }\n\n  // shortcut methods for `.bind(event, fn)` for each event type\n  ;('focusin focusout focus blur load resize scroll unload click dblclick '+\n  'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\n  'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n    $.fn[event] = function(callback) {\n      return (0 in arguments) ?\n        this.bind(event, callback) :\n        this.trigger(event)\n    }\n  })\n\n  $.Event = function(type, props) {\n    if (!isString(type)) props = type, type = props.type\n    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\n    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\n    event.initEvent(type, bubbles, true)\n    return compatible(event)\n  }\n\n})(Zepto)\n\n;(function($){\n  var jsonpID = 0,\n      document = window.document,\n      key,\n      name,\n      rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n      scriptTypeRE = /^(?:text|application)\\/javascript/i,\n      xmlTypeRE = /^(?:text|application)\\/xml/i,\n      jsonType = 'application/json',\n      htmlType = 'text/html',\n      blankRE = /^\\s*$/,\n      originAnchor = document.createElement('a')\n\n  originAnchor.href = window.location.href\n\n  // trigger a custom event and return false if it was cancelled\n  function triggerAndReturn(context, eventName, data) {\n    var event = $.Event(eventName)\n    $(context).trigger(event, data)\n    return !event.isDefaultPrevented()\n  }\n\n  // trigger an Ajax \"global\" event\n  function triggerGlobal(settings, context, eventName, data) {\n    if (settings.global) return triggerAndReturn(context || document, eventName, data)\n  }\n\n  // Number of active Ajax requests\n  $.active = 0\n\n  function ajaxStart(settings) {\n    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n  }\n  function ajaxStop(settings) {\n    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n  }\n\n  // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n  function ajaxBeforeSend(xhr, settings) {\n    var context = settings.context\n    if (settings.beforeSend.call(context, xhr, settings) === false ||\n        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n      return false\n\n    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n  }\n  function ajaxSuccess(data, xhr, settings, deferred) {\n    var context = settings.context, status = 'success'\n    settings.success.call(context, data, status, xhr)\n    if (deferred) deferred.resolveWith(context, [data, status, xhr])\n    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n    ajaxComplete(status, xhr, settings)\n  }\n  // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n  function ajaxError(error, type, xhr, settings, deferred) {\n    var context = settings.context\n    settings.error.call(context, xhr, type, error)\n    if (deferred) deferred.rejectWith(context, [xhr, type, error])\n    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n    ajaxComplete(type, xhr, settings)\n  }\n  // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n  function ajaxComplete(status, xhr, settings) {\n    var context = settings.context\n    settings.complete.call(context, xhr, status)\n    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n    ajaxStop(settings)\n  }\n\n  // Empty function, used as default callback\n  function empty() {}\n\n  $.ajaxJSONP = function(options, deferred){\n    if (!('type' in options)) return $.ajax(options)\n\n    var _callbackName = options.jsonpCallback,\n      callbackName = ($.isFunction(_callbackName) ?\n        _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\n      script = document.createElement('script'),\n      originalCallback = window[callbackName],\n      responseData,\n      abort = function(errorType) {\n        $(script).triggerHandler('error', errorType || 'abort')\n      },\n      xhr = { abort: abort }, abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    $(script).on('load error', function(e, errorType){\n      clearTimeout(abortTimeout)\n      $(script).off().remove()\n\n      if (e.type == 'error' || !responseData) {\n        ajaxError(null, errorType || 'error', xhr, options, deferred)\n      } else {\n        ajaxSuccess(responseData[0], xhr, options, deferred)\n      }\n\n      window[callbackName] = originalCallback\n      if (responseData && $.isFunction(originalCallback))\n        originalCallback(responseData[0])\n\n      originalCallback = responseData = undefined\n    })\n\n    if (ajaxBeforeSend(xhr, options) === false) {\n      abort('abort')\n      return xhr\n    }\n\n    window[callbackName] = function(){\n      responseData = arguments\n    }\n\n    script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\n    document.head.appendChild(script)\n\n    if (options.timeout > 0) abortTimeout = setTimeout(function(){\n      abort('timeout')\n    }, options.timeout)\n\n    return xhr\n  }\n\n  $.ajaxSettings = {\n    // Default type of request\n    type: 'GET',\n    // Callback that is executed before request\n    beforeSend: empty,\n    // Callback that is executed if the request succeeds\n    success: empty,\n    // Callback that is executed the the server drops error\n    error: empty,\n    // Callback that is executed on request complete (both: error and success)\n    complete: empty,\n    // The context for the callbacks\n    context: null,\n    // Whether to trigger \"global\" Ajax events\n    global: true,\n    // Transport\n    xhr: function () {\n      return new window.XMLHttpRequest()\n    },\n    // MIME types mapping\n    // IIS returns Javascript as \"application/x-javascript\"\n    accepts: {\n      script: 'text/javascript, application/javascript, application/x-javascript',\n      json:   jsonType,\n      xml:    'application/xml, text/xml',\n      html:   htmlType,\n      text:   'text/plain'\n    },\n    // Whether the request is to another domain\n    crossDomain: false,\n    // Default timeout\n    timeout: 0,\n    // Whether data should be serialized to string\n    processData: true,\n    // Whether the browser should be allowed to cache GET responses\n    cache: true\n  }\n\n  function mimeToDataType(mime) {\n    if (mime) mime = mime.split(';', 2)[0]\n    return mime && ( mime == htmlType ? 'html' :\n      mime == jsonType ? 'json' :\n      scriptTypeRE.test(mime) ? 'script' :\n      xmlTypeRE.test(mime) && 'xml' ) || 'text'\n  }\n\n  function appendQuery(url, query) {\n    if (query == '') return url\n    return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n  }\n\n  // serialize payload and append it to the URL for GET requests\n  function serializeData(options) {\n    if (options.processData && options.data && $.type(options.data) != \"string\")\n      options.data = $.param(options.data, options.traditional)\n    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\n      options.url = appendQuery(options.url, options.data), options.data = undefined\n  }\n\n  $.ajax = function(options){\n    var settings = $.extend({}, options || {}),\n        deferred = $.Deferred && $.Deferred(),\n        urlAnchor\n    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n    ajaxStart(settings)\n\n    if (!settings.crossDomain) {\n      urlAnchor = document.createElement('a')\n      urlAnchor.href = settings.url\n      urlAnchor.href = urlAnchor.href\n      settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\n    }\n\n    if (!settings.url) settings.url = window.location.toString()\n    serializeData(settings)\n\n    var dataType = settings.dataType, hasPlaceholder = /\\?.+=\\?/.test(settings.url)\n    if (hasPlaceholder) dataType = 'jsonp'\n\n    if (settings.cache === false || (\n         (!options || options.cache !== true) &&\n         ('script' == dataType || 'jsonp' == dataType)\n        ))\n      settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n    if ('jsonp' == dataType) {\n      if (!hasPlaceholder)\n        settings.url = appendQuery(settings.url,\n          settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\n      return $.ajaxJSONP(settings, deferred)\n    }\n\n    var mime = settings.accepts[dataType],\n        headers = { },\n        setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n        protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n        xhr = settings.xhr(),\n        nativeSetHeader = xhr.setRequestHeader,\n        abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\n    setHeader('Accept', mime || '*/*')\n    if (mime = settings.mimeType || mime) {\n      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n      xhr.overrideMimeType && xhr.overrideMimeType(mime)\n    }\n    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n      setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n\n    if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])\n    xhr.setRequestHeader = setHeader\n\n    xhr.onreadystatechange = function(){\n      if (xhr.readyState == 4) {\n        xhr.onreadystatechange = empty\n        clearTimeout(abortTimeout)\n        var result, error = false\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n          dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n          result = xhr.responseText\n\n          try {\n            // http://perfectionkills.com/global-eval-what-are-the-options/\n            if (dataType == 'script')    (1,eval)(result)\n            else if (dataType == 'xml')  result = xhr.responseXML\n            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n          } catch (e) { error = e }\n\n          if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\n          else ajaxSuccess(result, xhr, settings, deferred)\n        } else {\n          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\n        }\n      }\n    }\n\n    if (ajaxBeforeSend(xhr, settings) === false) {\n      xhr.abort()\n      ajaxError(null, 'abort', xhr, settings, deferred)\n      return xhr\n    }\n\n    if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n\n    var async = 'async' in settings ? settings.async : true\n    xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n    for (name in headers) nativeSetHeader.apply(xhr, headers[name])\n\n    if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n        xhr.onreadystatechange = empty\n        xhr.abort()\n        ajaxError(null, 'timeout', xhr, settings, deferred)\n      }, settings.timeout)\n\n    // avoid sending empty string (#319)\n    xhr.send(settings.data ? settings.data : null)\n    return xhr\n  }\n\n  // handle optional data/success arguments\n  function parseArguments(url, data, success, dataType) {\n    if ($.isFunction(data)) dataType = success, success = data, data = undefined\n    if (!$.isFunction(success)) dataType = success, success = undefined\n    return {\n      url: url\n    , data: data\n    , success: success\n    , dataType: dataType\n    }\n  }\n\n  $.get = function(/* url, data, success, dataType */){\n    return $.ajax(parseArguments.apply(null, arguments))\n  }\n\n  $.post = function(/* url, data, success, dataType */){\n    var options = parseArguments.apply(null, arguments)\n    options.type = 'POST'\n    return $.ajax(options)\n  }\n\n  $.getJSON = function(/* url, data, success */){\n    var options = parseArguments.apply(null, arguments)\n    options.dataType = 'json'\n    return $.ajax(options)\n  }\n\n  $.fn.load = function(url, data, success){\n    if (!this.length) return this\n    var self = this, parts = url.split(/\\s/), selector,\n        options = parseArguments(url, data, success),\n        callback = options.success\n    if (parts.length > 1) options.url = parts[0], selector = parts[1]\n    options.success = function(response){\n      self.html(selector ?\n        $('<div>').html(response.replace(rscript, \"\")).find(selector)\n        : response)\n      callback && callback.apply(self, arguments)\n    }\n    $.ajax(options)\n    return this\n  }\n\n  var escape = encodeURIComponent\n\n  function serialize(params, obj, traditional, scope){\n    var type, array = $.isArray(obj), hash = $.isPlainObject(obj)\n    $.each(obj, function(key, value) {\n      type = $.type(value)\n      if (scope) key = traditional ? scope :\n        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\n      // handle data in serializeArray() format\n      if (!scope && array) params.add(value.name, value.value)\n      // recurse into nested objects\n      else if (type == \"array\" || (!traditional && type == \"object\"))\n        serialize(params, value, traditional, key)\n      else params.add(key, value)\n    })\n  }\n\n  $.param = function(obj, traditional){\n    var params = []\n    params.add = function(key, value) {\n      if ($.isFunction(value)) value = value()\n      if (value == null) value = \"\"\n      this.push(escape(key) + '=' + escape(value))\n    }\n    serialize(params, obj, traditional)\n    return params.join('&').replace(/%20/g, '+')\n  }\n})(Zepto)\n\n;(function($){\n  $.fn.serializeArray = function() {\n    var name, type, result = [],\n      add = function(value) {\n        if (value.forEach) return value.forEach(add)\n        result.push({ name: name, value: value })\n      }\n    if (this[0]) $.each(this[0].elements, function(_, field){\n      type = field.type, name = field.name\n      if (name && field.nodeName.toLowerCase() != 'fieldset' &&\n        !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\n        ((type != 'radio' && type != 'checkbox') || field.checked))\n          add($(field).val())\n    })\n    return result\n  }\n\n  $.fn.serialize = function(){\n    var result = []\n    this.serializeArray().forEach(function(elm){\n      result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\n    })\n    return result.join('&')\n  }\n\n  $.fn.submit = function(callback) {\n    if (0 in arguments) this.bind('submit', callback)\n    else if (this.length) {\n      var event = $.Event('submit')\n      this.eq(0).trigger(event)\n      if (!event.isDefaultPrevented()) this.get(0).submit()\n    }\n    return this\n  }\n\n})(Zepto)\n\n;(function($){\n  // __proto__ doesn't exist on IE<11, so redefine\n  // the Z function to use object extension instead\n  if (!('__proto__' in {})) {\n    $.extend($.zepto, {\n      Z: function(dom, selector){\n        dom = dom || []\n        $.extend(dom, $.fn)\n        dom.selector = selector || ''\n        dom.__Z = true\n        return dom\n      },\n      // this is a kludge but works\n      isZ: function(object){\n        return $.type(object) === 'array' && '__Z' in object\n      }\n    })\n  }\n\n  // getComputedStyle shouldn't freak out when called\n  // without a valid element as argument\n  try {\n    getComputedStyle(undefined)\n  } catch(e) {\n    var nativeGetComputedStyle = getComputedStyle;\n    window.getComputedStyle = function(element){\n      try {\n        return nativeGetComputedStyle(element)\n      } catch(e) {\n        return null\n      }\n    }\n  }\n})(Zepto)\n;\n\n\n}"],"sourceRoot":"/source/"}